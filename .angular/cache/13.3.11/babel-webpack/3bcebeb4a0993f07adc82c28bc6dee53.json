{"ast":null,"code":"import { GenreComponent } from '../genre/genre.component';\nimport { DirectorComponent } from '../director/director.component';\nimport { MovieInfoComponent } from '../movie-info/movie-info.component';\nimport { UserProfileComponent } from '../user-profile/user-profile.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/material/icon\";\n\nfunction MovieCardComponent_mat_card_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 4)(1, \"mat-toolbar-row\")(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"span\", 5);\n    i0.ɵɵelementStart(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_6_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.isFavoriteMovie(movie_r1._id) ? ctx_r2.removeFavoriteMovie(movie_r1._id) : ctx_r2.addToFavorites(movie_r1._id);\n    });\n    i0.ɵɵelementStart(6, \"mat-icon\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(8, \"img\", 7);\n    i0.ɵɵelementStart(9, \"mat-card-actions\")(10, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_6_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.openGenre(movie_r1.Genre.Name, movie_r1.Genre.Description);\n    });\n    i0.ɵɵtext(11, \" Genre \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_6_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.openDirector(movie_r1.Director.Name, movie_r1.Director.Bio, movie_r1.Director.Birth);\n    });\n    i0.ɵɵtext(13, \" Director \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_6_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.openSynopsis(movie_r1.Title, movie_r1.Description);\n    });\n    i0.ɵɵtext(15, \" Synopsis \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(movie_r1.Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.isFavoriteMovie(movie_r1._id) ? \"mat-icon-button\" : \"mat-icon-button\")(\"color\", ctx_r0.isFavoriteMovie(movie_r1._id) ? \"accent\" : \"warn\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.isFavoriteMovie(movie_r1._id) ? \"favorite\" : \"favorite_border\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", movie_r1.ImagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", movie_r1.Title);\n  }\n}\n\nexport let MovieCardComponent = /*#__PURE__*/(() => {\n  class MovieCardComponent {\n    constructor(fetchApiData, dialog, router) {\n      this.fetchApiData = fetchApiData;\n      this.dialog = dialog;\n      this.router = router;\n      this.movies = [];\n      this.favorites = [];\n    }\n\n    ngOnInit() {\n      this.getMovies();\n      this.getFavorites();\n      this.defineUser();\n    }\n\n    defineUser() {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      this.user = user;\n    }\n\n    getMovies() {\n      this.fetchApiData.getAllMovies().subscribe(resp => {\n        this.movies = resp;\n        return this.movies;\n      });\n    }\n\n    getFavorites() {\n      this.fetchApiData.getOneUser().subscribe(resp => {\n        if (resp.user && resp.user.favorite_movies) {\n          this.favorites = resp.user.favorite_movies;\n        } else {\n          this.favorites = []; // Set an empty array if data is not available\n        }\n      }, error => {\n        console.error('Error fetching user data:', error);\n        this.favorites = []; // Set an empty array on error as well\n      });\n    }\n\n    isFavoriteMovie(movieId) {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      return user.FavoriteMovies.indexOf(movieId) >= 0;\n    }\n\n    viewProfile(name, email, birthday) {\n      this.dialog.open(UserProfileComponent, {\n        data: {\n          name: name,\n          email: email,\n          birthday: birthday\n        },\n        width: '400px'\n      });\n    }\n\n    logout() {\n      localStorage.setItem('user', \"\");\n      localStorage.setItem('token', \"\");\n      this.router.navigate(['welcome']);\n    }\n\n    addToFavorites(movieId) {\n      if (this.isFavoriteMovie(movieId)) {\n        this.removeFavoriteMovie(movieId);\n      } else {\n        this.fetchApiData.addfavoriteMovies(movieId).subscribe(() => {\n          this.getFavorites();\n        });\n      }\n    }\n\n    removeFavoriteMovie(movieId) {\n      this.fetchApiData.deleteFavoriteMovie(movieId).subscribe(() => {});\n    }\n\n    openGenre(name, description) {\n      this.dialog.open(GenreComponent, {\n        data: {\n          name: name,\n          description: description\n        },\n        width: '400px'\n      });\n    }\n\n    openDirector(name, bio, birth_year) {\n      this.dialog.open(DirectorComponent, {\n        data: {\n          name: name,\n          bio: bio,\n          birth_year: birth_year\n        },\n        width: '400px'\n      });\n    }\n\n    openSynopsis(Title, Description) {\n      this.dialog.open(MovieInfoComponent, {\n        data: {\n          Title: Title,\n          Description: Description\n        },\n        width: '400px'\n      });\n    }\n\n  }\n\n  MovieCardComponent.ɵfac = function MovieCardComponent_Factory(t) {\n    return new (t || MovieCardComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  MovieCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MovieCardComponent,\n    selectors: [[\"app-movie-card\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"movie-page\"], [\"mat-flat-button\", \"\", \"color\", \"basic\", 3, \"click\"], [1, \"movie-view\", 2, \"display\", \"flex\"], [\"style\", \"flex: 1 1 auto;\", 4, \"ngFor\", \"ngForOf\"], [2, \"flex\", \"1 1 auto\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Example icon-button with heart icon\", 3, \"ngClass\", \"color\", \"click\"], [3, \"src\", \"alt\"]],\n    template: function MovieCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function MovieCardComponent_Template_button_click_1_listener() {\n          return ctx.viewProfile(ctx.user.Username, ctx.user.Email, ctx.user.Birthday);\n        });\n        i0.ɵɵtext(2, \" Profile \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function MovieCardComponent_Template_button_click_3_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(4, \" Logout \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 2);\n        i0.ɵɵtemplate(6, MovieCardComponent_mat_card_6_Template, 16, 6, \"mat-card\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n      }\n    },\n    directives: [i4.MatButton, i5.NgForOf, i6.MatCard, i7.MatToolbarRow, i5.NgClass, i8.MatIcon, i6.MatCardActions],\n    styles: [\"\"]\n  });\n  return MovieCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}